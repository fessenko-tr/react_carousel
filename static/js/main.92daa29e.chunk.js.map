{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","width","offset","onOffsetChange","picCount","step","animationDuration","liStyles","transform","transition","initialWidth","totalWidth","length","stepLength","nextOffsetTreshold","canMoveNext","canMovePrev","className","style","map","img","i","src","alt","type","disabled","onClick","App","useState","size","setSize","setOffset","displayPicsQnty","setDisplayPicsQnty","scrollStep","setScrollStep","setAnimationDuration","min","value","onChange","e","newSize","target","max","newPicsQty","containerWidth","newVisibleArea","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92daa29e.chunk.js","sourcesContent":["import './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  width: number,\n  offset: number,\n  onOffsetChange: (newOffset:number) => void,\n  picCount: number,\n  step: number,\n  animationDuration: number,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  width,\n  offset,\n  onOffsetChange,\n  picCount,\n  step,\n  animationDuration,\n}) => {\n  const liStyles = {\n    transform: `translate(${offset}px)`,\n    transition: `transform ${animationDuration}ms`,\n  };\n\n  const initialWidth = width * picCount;\n  const totalWidth = images.length * width;\n  const stepLength = width * step;\n  const nextOffsetTreshold = offset - initialWidth;\n  const prevOffsetTreshhold = 0;\n  const canMoveNext = nextOffsetTreshold - stepLength >= -totalWidth;\n  const canMovePrev = offset + stepLength <= prevOffsetTreshhold;\n\n  const handlePrevClick = () => {\n    onOffsetChange(canMovePrev ? offset + stepLength : offset - offset);\n  };\n\n  const handleNextClick = () => {\n    onOffsetChange(canMoveNext\n      ? offset - stepLength\n      : offset - (offset - initialWidth + totalWidth));\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel__list\"\n        style={{ width: `${initialWidth}px` }}\n      >\n        {images.map((img, i) => (\n          <li\n            key={img}\n            style={liStyles}\n          >\n            <img\n              src={img}\n              className=\"Carousel__img\"\n              alt={`pic #${i + 1}`}\n              style={{ width: `${width}px` }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__btns\">\n        <button\n          className=\"Carousel__btn\"\n          type=\"button\"\n          disabled={offset === prevOffsetTreshhold}\n          onClick={handlePrevClick}\n          data-cy=\"next\"\n        >\n          &#8592;\n        </button>\n        <button\n          className=\"Carousel__btn\"\n          type=\"button\"\n          disabled={nextOffsetTreshold === -totalWidth}\n          onClick={handleNextClick}\n        >\n          &#8594;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst App: React.FC = () => {\n  const [size, setSize] = useState(130);\n  const [offset, setOffset] = useState(0);\n  const [displayPicsQnty, setDisplayPicsQnty] = useState(3);\n  const [scrollStep, setScrollStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n\n  const handleSizeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newSize = +e.target.value;\n    const currentPosition = offset / size;\n\n    setOffset(currentPosition * newSize);\n    setSize(newSize);\n  };\n\n  const handlePicsQntyChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newPicsQty = +e.target.value;\n    const containerWidth = images.length * size;\n    const newVisibleArea = newPicsQty * size;\n\n    setDisplayPicsQnty(newPicsQty);\n\n    if (offset - newVisibleArea < -containerWidth) {\n      setOffset(offset + size);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1 data-cy=\"title\" className=\"App__title\">Carousel with {images.length} images</h1>\n\n      <Carousel\n        images={images}\n        width={size}\n        offset={offset}\n        onOffsetChange={setOffset}\n        picCount={displayPicsQnty}\n        step={scrollStep}\n        animationDuration={animationDuration}\n      />\n\n      <fieldset className=\"App__fieldset\">\n        <legend>Carousel settings</legend>\n\n        <label className=\"App__label\">\n          Picture width:\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            min=\"10\"\n            step=\"10\"\n            value={size}\n            onChange={handleSizeChange}\n          />\n        </label>\n\n        <label className=\"App__label\">\n          Frame size:\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            min=\"1\"\n            step=\"1\"\n            max={images.length}\n            value={displayPicsQnty}\n            onChange={handlePicsQntyChange}\n          />\n        </label>\n\n        <label className=\"App__label\">\n          Step:\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            min=\"1\"\n            step=\"1\"\n            max={images.length}\n            value={scrollStep}\n            onChange={(e) => setScrollStep(+e.target.value)}\n          />\n        </label>\n\n        <label className=\"App__label\">\n          Animation duration:\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            min=\"0\"\n            step=\"100\"\n            value={animationDuration}\n            onChange={(e) => setAnimationDuration(+e.target.value)}\n          />\n        </label>\n      </fieldset>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}